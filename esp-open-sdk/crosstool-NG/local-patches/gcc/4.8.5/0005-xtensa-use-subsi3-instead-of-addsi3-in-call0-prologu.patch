From 21014a9f4c64394b2dba69bea2e57b70973ba2e3 Mon Sep 17 00:00:00 2001
From: Max Filippov <jcmvbkbc@gmail.com>
Date: Sun, 5 Oct 2014 06:26:18 +0400
Subject: [PATCH 05/29] xtensa: use subsi3 instead of addsi3 in call0 prologue

This allows sharing single literal for stack adjustment between prologue
and epilogue.

Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
---
 gcc/config/xtensa/xtensa.c  |  8 ++++----
 gcc/config/xtensa/xtensa.md | 11 ++++++-----
 2 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/gcc/config/xtensa/xtensa.c b/gcc/config/xtensa/xtensa.c
index 8778407..2527c96 100644
--- a/gcc/config/xtensa/xtensa.c
+++ b/gcc/config/xtensa/xtensa.c
@@ -2684,8 +2684,8 @@ xtensa_expand_prologue (void)
       else
         {
 	  rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);
-	  emit_move_insn (tmp_reg, GEN_INT (-total_size));
-	  insn = emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx, tmp_reg));
+	  emit_move_insn (tmp_reg, GEN_INT (total_size));
+	  insn = emit_insn (gen_subsi3 (stack_pointer_rtx, stack_pointer_rtx, tmp_reg));
 	  offset = total_size - UNITS_PER_WORD;
 	}
     }
@@ -2704,8 +2704,8 @@ xtensa_expand_prologue (void)
   if (total_size > 1024)
     {
       rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);
-      emit_move_insn (tmp_reg, GEN_INT (xtensa_callee_save_size - total_size));
-      insn = emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx, tmp_reg));
+      emit_move_insn (tmp_reg, GEN_INT (total_size - xtensa_callee_save_size));
+      insn = emit_insn (gen_subsi3 (stack_pointer_rtx, stack_pointer_rtx, tmp_reg));
     }
 #endif
 
diff --git a/gcc/config/xtensa/xtensa.md b/gcc/config/xtensa/xtensa.md
index a60bbda..7ddd326 100644
--- a/gcc/config/xtensa/xtensa.md
+++ b/gcc/config/xtensa/xtensa.md
@@ -196,14 +196,15 @@
 ;; Subtraction.
 
 (define_insn "subsi3"
-  [(set (match_operand:SI 0 "register_operand" "=a")
-        (minus:SI (match_operand:SI 1 "register_operand" "r")
-		  (match_operand:SI 2 "register_operand" "r")))]
+  [(set (match_operand:SI 0 "register_operand" "=a,q")
+        (minus:SI (match_operand:SI 1 "register_operand" "r,r")
+		  (match_operand:SI 2 "register_operand" "r,r")))]
   ""
   "sub\t%0, %1, %2"
-  [(set_attr "type"	"arith")
+  [(set_attr "type"	"arith,arith")
    (set_attr "mode"	"SI")
-   (set_attr "length"	"3")])
+   (set_attr "length"	"3,3")
+   (set_attr "abi"	"*,call0")])
 
 (define_insn "*subx"
   [(set (match_operand:SI 0 "register_operand" "=a")
-- 
2.1.4

